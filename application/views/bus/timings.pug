extends ../layout
    
block head
  title TransportSG - Next 3: #{busStop.stopName}
  
block title
  span Next 3: #{busStop.stopName}

block scripts
  
block style
  link(rel='stylesheet' href='/static/css/combined-colours.css')
  link(rel='stylesheet' href='/static/css/timings/base-style.css')

block content
  div#departures
    for service in services
      - let destinations = Object.keys(timings[service]).sort((a, b) => a.length - b.length)
      for destination in destinations
        - let departures = timings[service][destination]
        div.departure
          a(class=`leftContainer serviceNumber ${departures[0].operator.toLowerCase()}`)
            span.serviceNumber #{departures[0].serviceNumber}
            if departures[0].serviceVariant
              span.serviceVariant #{departures[0].serviceVariant}
            - let berth = departures[0].berth
            if berth
              span.berth Berth#{(berth.includes && berth.includes('-')) ? 's' : ''} #{berth}
          a.departureInfo
            span.towards Towards
            span.destination=destination
          if departures[0].plate
            div.plateContainer
              div(class=`plate ${departures[0].plate.toLowerCase()}`)
                span=service
          div.timings
            for i in Array(3 - departures.length)
              div.timing.mini(style='display: none')
            for departure in departures
              div(class=`timing mini seating-${departure.seatsAvailable.toLowerCase()}`)
                span #{timeDifference(departure.estimatedDepartureTime)}
                span #{departure.estimatedDepartureTime.format('HH:mm')}
                div.stats
                  span #{departure.busType}
                  if departure.wheelchairAccessible
                    img(src='/static/images/wheelchair.svg')
                  else
                    img(src='/static/images/non-wheelchair.svg')
