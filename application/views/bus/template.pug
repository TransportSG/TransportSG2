for service in services
  - let destinations = Object.keys(timings[service]).sort((a, b) => a.length - b.length)
  for destination in destinations
    - let departures = timings[service][destination]
    div.departure
      a(class=`leftContainer ${departures[0].operator.toLowerCase()}`)
        span.serviceNumber #{departures[0].serviceNumber}
        if departures[0].serviceVariant
          span.serviceVariant #{departures[0].serviceVariant}
        - let berth = departures[0].berth
        if berth
          span.berth Berth#{(berth.includes && berth.includes('-')) ? 's' : ''} #{berth}
      a(href=`/bus/timings/${departures[0].destinationBusStopCode}`).departureInfo
        span.towards Towards
        span.destination #{destination}
        if departures[0].destinationInfo
          span.destinationInfo #{departures[0].destinationInfo}
      if departures[0].plate
        div.plateContainer
          div(class=`plate ${departures[0].plate.toLowerCase()}`)
            span=service
      div.timings
        for i in Array(3 - departures.length)
          div.timing.mini(style='display: none')
        for departure in departures
          div(class=`timing mini seating-${departure.seatsAvailable.toLowerCase()}`)
            span #{timeDifference(departure.estimatedDepartureTime)}
            span #{departure.estimatedDepartureTime.format('HH:mm')}
            div.stats
              span #{departure.busType}
              if departure.wheelchairAccessible
                img(src='/static/images/decals/wheelchair.svg')
              else
                img(src='/static/images/decals/non-wheelchair.svg')
